#!/usr/bin/env node

// @ts-check

import { makeBadge } from 'badge-maker'
import fs from 'node:fs/promises'
import path from 'node:path'
import report from '../coverage/coverage-summary.json' with { type: 'json' }

/** @param {number} coverage - The coverage percentage. */
const getCoverageColor = coverage => {
  if (coverage < 70) return 'red'
  if (coverage < 80) return 'orange'
  if (coverage < 90) return 'yellow'
  return 'brightgreen'
}

/** Main function to generate the coverage badge. */
async function generateBadge() {
  try {
    const coverage = report.total.statements.pct
    const roundedCoverage = Math.round(coverage)

    const svg = makeBadge({
      label: 'coverage',
      message: `${roundedCoverage}%`,
      color: getCoverageColor(roundedCoverage)
    })

    // Ensure the output directory exists
    const absoluteOutputPath = path.resolve(process.cwd(), 'assets/coverage-badge.svg')
    await fs.mkdir(path.dirname(absoluteOutputPath), { recursive: true })

    await fs.writeFile(absoluteOutputPath, svg)

    console.log(`✅ Coverage badge written to: ${absoluteOutputPath}`)
  } catch (error) {
    console.error(`❌ Error generating coverage badge: ${error.message}`)
    process.exit(1)
  }
}

generateBadge()
